<?xml version="1.0" encoding="UTF-8"?>
<ECSchema schemaName="GeometricFeature" alias="gf" version="01.00.00" xmlns="http://www.bentley.com/schemas/Bentley.ECXML.3.1" displayLabel="Geometric Feature" description="Defines abstract classes (representing 'geometric features') which are intended to be subclassed in discipline-specific schemas.">

    <ECSchemaReference name="BisCore" version="01.00.12" alias="bis"/>

    <ECEntityClass typeName="GeometricFeatureRecord" modifier="Abstract" displayLabel="Geometric Feature Record" description="A bis:GeometryDetailRecord describing a real-world geometric feature.">
        <BaseClass>bis:GeometryDetailRecord</BaseClass>
    </ECEntityClass>

    <ECEntityClass typeName="VoidRecord" modifier="Abstract" displayLabel="Void Record" description="A GeometricFeatureRecord representing a subtraction of material from the basic form of a solid Entity.">
        <BaseClass>GeometricFeatureRecord</BaseClass>
    </ECEntityClass>

    <ECEntityClass typeName="RecessRecord" modifier="Abstract" displayLabel="Recess Record" description="A VoidRecord in which the void does not penetration through the solid.">
        <BaseClass>VoidRecord</BaseClass>
    </ECEntityClass>

    <ECEntityClass typeName="OpeningRecord" modifier="Abstract" displayLabel="Opening Record" description="A VoidRecord in which the void penetration through the solid.">
        <BaseClass>VoidRecord</BaseClass>
    </ECEntityClass>

    <!--ECEntityClass typeName="InternalVoidRecord" modifier="Abstract" displayLabel="Internal Void Record" description="A VoidRecord in which the void is internal to the solid, i.e it does not pierce any of its surfaces.">
        <BaseClass>VoidRecord</BaseClass>
    </ECEntityClass-->

    <ECEntityClass typeName="ProtrusionRecord" modifier="Abstract" displayLabel="Protrusion Record" description="A GeometricFeatureRecord representing an addition of material onto the basic form of a solid Entity.">
        <BaseClass>GeometricFeatureRecord</BaseClass>
    </ECEntityClass>    

    <ECRelationshipClass typeName="PhysicalElementFillsVoid" strength="referencing" modifier="None" displayLabel="PhysicalElement Fills Void" description="Relates a PhysicalElement to a void that it fills in another PhysicalElement.">
        <BaseClass>bis:ElementRefersToElement</BaseClass>  <!-- Does this need to be ElementDrivesElement? -->
        <Source multiplicity="(0..*)" roleLabel="fills" polymorphic="true">
            <Class class="bis:PhysicalElement"/>
        </Source>
        <Target multiplicity="(0..1)" roleLabel="is filled by" polymorphic="true">
            <Class class="VoidRecord"/>
        </Target>
    </ECRelationshipClass> 
</ECSchema>
